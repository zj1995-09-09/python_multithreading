# encoding: utf-8
# @author: MrZhou
# @file: __并发编程之多线程理论.py
# @time: 2023/2/23 17:09
# @desc:

# 线程概念
# 在传统操作系统中，每个进程有一个地址空间，而且默认就有一个控制线程
#
# 线程，就是一条流水线工作的过程，流水线的工作需要电源CPU，而一条流水线必须属于一个车间
# 一个车间的工作过程是一个进程，车间负责把资源整合到一起，是一个资源单位，而一个车间内至少有一条流水线
#
# 进程只是用来把资源集中到一起(进程只是一个资源单位或者说资源集合)，而线程才是CPU上的执行单位
#
# 多线程即多个控制线程的概念是，在一个进程中存在多个线程，多个线程共享该进程的地址空间
# 例如，北京地铁与上海地铁是不同的进程，而北京地铁里的13号线是一个线程，北京地铁所有的线路共享北京地铁所有的资源，比如所有的乘客可以被所有线路拉。
#
# 1、同一个进程内的多个线程共享该进程内的地址资源
# 2、创建线程的开销远小于创建进程的开销，
# 创建一个进程，就是创建一个车间，涉及到申请空间，而且在该空间内建至少一条流水线，但创建线程，就只是在一个车间内造一条流水线，无需申请空间，所以创建开销小）
#
# 1、如果多个任务共用一块地址空间，那么必须在一个进程内开启多个线程
# 2、线程比进程更轻量级，更容易创建可撤销，在许多操作系统中，创建一个线程比创建一个进程要快10-100倍，在有大量线程需要动态和快速修改时，这一特性很有用
# 3、若多个线程都是CPU密集型，那么并不能获得性能上的增强，但是如果存在大量的计算和大量的I/O处理，拥有多个线程允许
# 这些活动彼此重叠运行，从而加快程序执行的速度
# 4、在多CPU中，为了最大限度的利用多核，可以开启多个线程，比开进程开销要小的多。这一条并不适用于python
#
# 多线程举例
# 开启一个字处理软件进程，该进程肯定需要办不止一件事情，比如监听键盘输入，处理文字，定时自动将文字保存到硬盘，这三个任务操作的都是同一块数据，因而不能用多进程。
# 只能在一个进程里并发地开启三个线程,如果是单线程，那就只能是，键盘输入时，不能处理文字和自动保存，自动保存时又不能输入和处理文字。
#
# 线程的实现分为两类：用户级线程user-level-thread 内核级线程 kernel-level thread
# 后者又称为内核支持的线程或轻量级进程
# 在多线程操作系统中，各个系统的实现方式并不相同，在有的系统中实现了用户级线程，有的系统中实现了内核级线程。
#
#
# 二： 内核线程的优缺点
#
# 　　优点：
#
# 当有多个处理机时，一个进程的多个线程可以同时执行。
# 　　缺点：
#
# 由内核进行调度。
#
# 三： 用户进程的优缺点
#
# 　　优点：
#
# 线程的调度不需要内核直接参与，控制简单。
# 可以在不支持线程的操作系统中实现。
# 创建和销毁线程、线程切换代价等线程管理的代价比内核线程少得多。
# 允许每个进程定制自己的调度算法，线程管理比较灵活。
# 线程能够利用的表空间和堆栈空间比内核级线程多。
# 同一进程中只能同时有一个线程在运行，如果有一个线程使用了系统调用而阻塞，那么整个进程都会被挂起。另外，页面失效也会产生同样的问题。
# 　　缺点：
#
# 资源调度按照进程进行，多个处理机下，同一个进程中的线程只能在同一个处理机下分时复用